/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techquizapp.gui;

import java.sql.Date;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import techquizapp.Dao.PerformanceDAO;
import techquizapp.Dao.QuestionDAO;
import techquizapp.Pojo.Answer;
import techquizapp.Pojo.AnswerStore;
import techquizapp.Pojo.Exam;
import techquizapp.Pojo.Performance;
import techquizapp.Pojo.Question;
import techquizapp.Pojo.QuestionStore;
import techquizapp.Pojo.UserProfile;

/**
 *
 * @author Harsh Vyas
 */
public class TakeTest extends javax.swing.JFrame {

    int hr,min,sec;
    
    private int qno,pos=0;
    private QuestionStore qstore;
    private AnswerStore astore;
    private Exam exam ;
    public TakeTest() {
        initComponents();
         this.setLocationRelativeTo(null);
         lblUsername.setText("Hello "+UserProfile.getUsername());
         qstore =new QuestionStore();
         astore=new AnswerStore();
         qno=1;
         lblQno.setText("Question no:"+qno);
//         Thread t=new Thread(this);
       Clock c=new Clock();
      c.start();
         
    }
     public TakeTest(Exam exam) {
        this();
        this.exam=exam;
        lblTitle.setText(exam.getLanguage().toUpperCase()+lblTitle.getText());
        loadQuestions();
        showQuestions();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblLogout = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        lblTitle = new javax.swing.JLabel();
        lblQno = new javax.swing.JLabel();
        rbSub2 = new javax.swing.JRadioButton();
        rbSub1 = new javax.swing.JRadioButton();
        rbSub4 = new javax.swing.JRadioButton();
        rbSub3 = new javax.swing.JRadioButton();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        lblSetTime = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 51));

        lblLogout.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(255, 255, 51));
        lblLogout.setText("         Logout");
        lblLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoutMouseClicked(evt);
            }
        });

        lblUsername.setForeground(new java.awt.Color(255, 255, 51));

        txtQuestion.setColumns(20);
        txtQuestion.setRows(5);
        jScrollPane1.setViewportView(txtQuestion);

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 51));
        lblTitle.setText("    Paper");

        lblQno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblQno.setForeground(new java.awt.Color(255, 255, 51));

        rbSub2.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(rbSub2);
        rbSub2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbSub2.setForeground(new java.awt.Color(255, 102, 0));
        rbSub2.setText("Subject2");

        rbSub1.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(rbSub1);
        rbSub1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbSub1.setForeground(new java.awt.Color(255, 102, 0));
        rbSub1.setText("Subject1");
        rbSub1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSub1ActionPerformed(evt);
            }
        });

        rbSub4.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(rbSub4);
        rbSub4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbSub4.setForeground(new java.awt.Color(255, 102, 0));
        rbSub4.setText("Subject4");

        rbSub3.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(rbSub3);
        rbSub3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbSub3.setForeground(new java.awt.Color(255, 102, 0));
        rbSub3.setText("Subject3");
        rbSub3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSub3ActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(0, 0, 0));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 0, 51));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setBackground(new java.awt.Color(0, 0, 0));
        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(255, 0, 51));
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 51));
        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(0, 0, 0));
        btnDone.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDone.setForeground(new java.awt.Color(255, 0, 51));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        lblSetTime.setBackground(new java.awt.Color(0, 0, 0));
        lblSetTime.setForeground(new java.awt.Color(255, 255, 51));

        lblTime.setBackground(new java.awt.Color(51, 51, 51));
        lblTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 255, 51));
        lblTime.setText("Time Remaining");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lblQno, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(rbSub1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rbSub4, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                    .addComponent(rbSub2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(204, 204, 204))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSetTime, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbSub3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNext)
                        .addGap(43, 43, 43)
                        .addComponent(btnPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(62, 62, 62)
                        .addComponent(btnDone)
                        .addGap(136, 136, 136))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbSub2)
                            .addComponent(rbSub1))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbSub4)
                            .addComponent(rbSub3)))
                    .addComponent(lblQno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSetTime, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnDone)
                    .addComponent(jButton3)
                    .addComponent(btnPrevious))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbSub1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSub1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSub1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        StudentOptionsFrame f=new StudentOptionsFrame();
        f.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed

       String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null)
        {
         Question quest=qstore.getQuestionByQno(qno);
         String correctAnswer=quest.getCorrectAnswer();
         Answer ans=new Answer(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
         Answer attempted=astore.getAnswerByQno(qno);
            System.out.println("correct option :"+ans);
         if(attempted==null)
         {
           astore.addAnswer(ans);
         }
         else
         {
           String prevAnswer=attempted.getChosenAnswer();
           if(prevAnswer.equals(chosenAnswer)==false)
           {
           int apos=astore.removeAnswer(attempted);
           astore.setAnswerAt(apos, ans);
           }
         }
    }    ////this if's backet was closed at the very end of the actionperformed so that was causing the problem that if the user doesn't selected any answer the Next button was not working
         pos++;
         if(pos>=qstore.getCount())
         {
           pos=0;
         }
         qno++;
         if(qno>qstore.getCount())         ////this condition was also wrong, it was qno>=sstore.getCount(), this will create problem the problem that it will never getting to the last question of the paper
         {
           qno=1;
         }
         lblQno.setText("QuesNO: "+qno);
         showQuestions();

    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
       String chosenAnswer=getUserAnswer();
       if(chosenAnswer!=null)
       {
           Question question=qstore.getQuestionByQno(qno);
           String correctAnswer=question.getCorrectAnswer();
            Answer newAnswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
            System.out.println(newAnswer);
            Answer answer=astore.getAnswerByQno(qno);
            if(answer==null)
                astore.addAnswer(answer);
            else
            {
                if(newAnswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
                {
                    int apos=astore.removeAnswer(answer);
                    astore.setAnswerAt(apos,newAnswer);
                }
            }
        }
        pos--;
        if(pos<0)
            pos=qstore.getCount()-1;
          qno--;
          if(qno<=0)
              qno=qstore.getCount();
        lblQno.setText("Question no.:"+qno);
        showQuestions(); 
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
      
              doneTest();                            
    }//GEN-LAST:event_btnDoneActionPerformed

    private void rbSub3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSub3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSub3ActionPerformed

    private void lblLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseClicked
       LoginFrame f=new LoginFrame();
       f.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_lblLogoutMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblSetTime;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JRadioButton rbSub1;
    private javax.swing.JRadioButton rbSub2;
    private javax.swing.JRadioButton rbSub3;
    private javax.swing.JRadioButton rbSub4;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables

    private void loadQuestions() {
       try{
         ArrayList<Question>questionList=QuestionDAO.getQuestionsByExamId(exam.getExamId());
         if(questionList.isEmpty())
         {
             System.out.println("Question list is empty!");
         } 
          for(Question q:questionList)
          {
            qstore.addQuestion(q);
          }
          System.out.println("Qstore: "+qstore);
         
     }catch(Exception e)
     {   
          JOptionPane.showMessageDialog(null,"Error in NewEditingPaper","Error!",JOptionPane.INFORMATION_MESSAGE);
          e.printStackTrace();
     }
    }
public void doneTest()
{
                String userAnswer=getUserAnswer();
        if(userAnswer!=null)
        {
            Question question=qstore.getQuestionByQno(qno);
            String correctAnswer=question.getCorrectAnswer();
            Answer newAnswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,userAnswer,correctAnswer);
            System.out.println(newAnswer);
            Answer answer=astore.getAnswerByQno(qno);
            if(answer==null)
                astore.addAnswer(newAnswer);
            else
            {
                if(newAnswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
                {
                    int apos=astore.removeAnswer(answer);
                    astore.setAnswerAt(apos,newAnswer);
                }
            }
        }
        int right=0,wrong=0;
        for(Question question:qstore.getAllQuestions())
        {
            int qno=question.getQno();
            Answer answer=astore.getAnswerByQno(qno);
            if(answer==null)
                continue;
            else
            {
                String chosenAnswer1=answer.getChosenAnswer();
                String correctAnswer=answer.getCorrectAnswer();
                if(chosenAnswer1.equals(correctAnswer))
                    ++right;
                else
                    ++wrong;
            }
        }
        String reportCard="Total Questions:"+qstore.getCount();
        reportCard+="\nRight Answers:"+right;
        reportCard+="\nWrong Answer:"+wrong;
        reportCard+="\nUnattempted:"+(qstore.getCount()-(right+wrong));
        JOptionPane.showMessageDialog(null,reportCard,"Your Result!",JOptionPane.INFORMATION_MESSAGE);
        try
        {
            Performance performance=new Performance(exam.getExamId(),exam.getLanguage(),UserProfile.getUsername(),right,wrong,(qstore.getCount()-(right+wrong)),(double)right/qstore.getCount()*100);
            PerformanceDAO.addPerformance(performance);
            JOptionPane.showMessageDialog(null,"Your performance has been succesfully added to the database","Performance Added!",JOptionPane.INFORMATION_MESSAGE);
            ChooseTest paperFrame=new ChooseTest();
            paperFrame.setVisible(true);
            this.dispose();
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"Error while connecting to the database!","Exception!",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
              


}
    private void showQuestions() {
       Question q=qstore.getQuestion(pos);
       buttonGroup1.clearSelection();
     txtQuestion.setText(q.getQuestion());
     rbSub1.setText(q.getAnswer1());
     rbSub2.setText(q.getAnswer2());
     rbSub3.setText(q.getAnswer3());
     rbSub4.setText(q.getAnswer4());
     Answer ans=astore.getAnswerByQno(qno);
     
     if(ans==null)
     {
       return;
     }
     
     String str=ans.getChosenAnswer();
     switch(str)
     {
      case "Answer1":
                 rbSub1.setSelected(true);
                 break;
     case "Answer2":
                 rbSub2.setSelected(true);
                 break;
     case "Answer3":
                 rbSub3.setSelected(true);
                 break;  
     case "Answer4":
                 rbSub4.setSelected(true);
                 break;             
                 
     }
    
     
    }
    
   private String getUserAnswer()
   {
     if(rbSub1.isSelected())
     {
         return "answer1";
     }
     else if(rbSub2.isSelected())
     {
         return "answer2";
     }
     else if(rbSub3.isSelected())
     {
         return "answer3";
     }
     else if(rbSub4.isSelected())
     {
         return "answer4";
     }
     return null;
   }

   
        class Clock extends Thread{
                     int time=0;
          int m=1,s=60,h=0;
       public void run(){
       while(true){
               Calendar date=Calendar.getInstance();
               date.setTime(new java.util.Date());
               date.set(Calendar.HOUR_OF_DAY, h);
               date.set(Calendar.MINUTE, m);
               date.set(Calendar.SECOND, s);
               date.set(Calendar.MILLISECOND, 0);
               java.util.Date da=date.getTime();
               SimpleDateFormat sdf=new SimpleDateFormat("HH:mm:ss");
               String str=sdf.format(da);
               
        try{
            Thread.sleep(1000);
            s=s-1;
            if(s==0){
                m=m-1;
                s=60;
                time=time+1;
            }
            
            //time=time+1000;
            lblSetTime.setText(str);
            }
            catch(InterruptedException ex){
                System.out.println(ex);
            }
           if(time==2){
               lblSetTime.setText("00:00:00");
               JOptionPane.showMessageDialog(null, "yuor time is complete","Test submitted",JOptionPane.INFORMATION_MESSAGE);
               doneTest();
               btnNext.setEnabled(false);
               btnPrevious.setEnabled(false);
               break;
           }
       }
         }
        }  
}
